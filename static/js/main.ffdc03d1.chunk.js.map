{"version":3,"sources":["routes/About.js","routes/Detail.js","component/Movie.js","routes/Home.js","component/Navigation.js","App.js","index.js"],"names":["About","props","console","log","Detail","this","location","history","undefined","state","push","title","React","Component","Movies","id","year","summary","poster","genres","to","pathname","className","src","alt","map","genre","index","Home","isLoading","movies","getMovies","a","axios","get","data","setState","movie","medium_cover_image","Navigation","fromNavigation","test","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAOeA,MALf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GACL,uF,8BCuBIG,E,uKApBX,WACIF,QAAQC,IAAIE,KAAKJ,OACjB,MAA4BI,KAAKJ,MAA1BK,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAEKC,IAAnBF,EAASG,OACRF,EAAQG,KAAK,O,oBAGrB,WACI,IAAOJ,EAAYD,KAAKJ,MAAjBK,SACP,OAAGA,EAASG,MAEJ,+BAAOH,EAASG,MAAME,QAGnB,S,GAhBEC,IAAMC,W,gDCuCZC,MAtCf,YAA4D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAML,EAAgC,EAAhCA,MAAOM,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAChD,OACI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAU,gBACVZ,MAAQ,CACJO,OACAL,QACAM,UACAC,SACAC,WAPR,SAUI,sBAAKG,UAAU,eAAf,UACI,qBAAKC,IAAKL,EAAQM,IAAKb,EAAOA,MAAOA,IACrC,sBAAKW,UAAU,aAAf,UACI,qBAAIA,UAAU,cAAd,qBAAqCX,KACrC,oBAAIW,UAAU,aAAd,SAA4BN,IAC5B,oBAAIM,UAAU,SAAd,SACKH,EAAOM,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAIL,UAAU,eAAd,SAA0CI,GAARC,QAGjD,mBAAGL,UAAU,gBAAb,SAA8BL,aCwBnCW,G,wDA7Cb,WAAY3B,GAAO,IAAD,8BAChB,cAAMA,IAIRQ,MAAQ,CACNoB,WAAY,EACZC,OAAS,IAPO,EASlBC,UATkB,sBASN,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAI,yDADzC,gBACaJ,EADb,EACHK,KAAQA,KAAQL,OAEvB,EAAKM,SAAS,CAACN,SAASD,WAAY,IAH1B,2CAPV3B,QAAQC,IAAI,SAFI,E,qDAelB,WACED,QAAQC,IAAI,uBAEZE,KAAK0B,c,gCAEP,WACE7B,QAAQC,IAAI,Y,oBAId,WACED,QAAQC,IAAI,UAEV,MAA8BE,KAAKI,MAA3BoB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACrB,OAAO,yBAASR,UAAU,YAAnB,SAEHO,EAAc,qBAAKP,UAAU,UAAf,SAAyB,sBAAMA,UAAU,cAAhB,0BAErC,qBAAKA,UAAU,SAAf,SACGQ,EAAOL,KAAI,SAAAY,GAEV,OADAnC,QAAQC,IAAIkC,EAAMlB,QACX,cAAC,EAAD,CAAsBJ,GAAIsB,EAAMtB,GAAIC,KAAMqB,EAAMrB,KAAML,MAAO0B,EAAM1B,MAAOM,QAASoB,EAAMpB,QAASC,OAAQmB,EAAMC,mBAAoBnB,OAAQkB,EAAMlB,QAAtIkB,EAAMtB,e,GArCpBH,IAAMC,YCYV0B,MAff,WACI,OACI,gCACI,cAAC,IAAD,CAAMnB,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAI,CACNC,SAAW,SACXZ,MAAQ,CACJ+B,gBAAiB,EACjBC,MAAO,IAJf,uBCcGC,MAff,SAAazC,GAEX,OADAC,QAAQC,IAAI,SAAUF,GAEtB,eAAC,IAAD,WACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAO0C,KAAK,IAAIC,OAAO,EAAMC,UAAWjB,IAExC,cAAC,IAAD,CAAOe,KAAK,SAASE,UAAW7C,IAEhC,cAAC,IAAD,CAAO2C,KAAK,gBAAgBE,UAAWzC,QCb3C0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ffdc03d1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About(props){\n    console.log(props)\n    return <span>About this page: I built it because I love movies.</span>\n}\n\nexport default About;","import React from \"react\";\n\n// function Detail({location}){\n//     console.log(location);\n//     return <span>hello</span>\n// }\nclass Detail extends React.Component{\n    componentDidMount(){\n        console.log(this.props);\n        const {location, history} = this.props;\n        // class component에서 location만 가져오는 방법..?\n        if(location.state === undefined){\n            history.push(\"/\");\n        }\n    }\n    render(){\n        const {location} = this.props;\n        if(location.state){\n            return(\n                <span>{location.state.title}</span>\n            )\n        }else{\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n//state가 필요없을 경우 class컴포넌트 필요없고 function으로 작성\n\nfunction Movies({ id, year, title, summary, poster, genres}){\n    return (\n        <Link to={{\n            pathname: \"/movie-detail\",\n            state : {\n                year,\n                title,\n                summary,\n                poster,\n                genres\n            }\n        }}>\n            <div className=\"movies_movie\">\n                <img src={poster} alt={title} title={title} />\n                <div className=\"movie_data\">\n                    <h3 className=\"movie_title\">title : {title}</h3>\n                    <h5 className=\"movie_year\">{year}</h5>\n                    <ul className=\"genres\">\n                        {genres.map((genre, index) => {\n                            return <li className=\"genres_genre\" key={index}>{genre}</li>\n                        })}\n                    </ul>\n                    <p className=\"movie_summary\">{summary}</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nMovies.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movies;","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../component/Movie\";\nimport \"./Home.css\"\n\n\nclass Home extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(\"hello\");\n    //제일 처음 랜더링 될때 실행 1 (랜더링 시작 시 - 최초한번실행)\n  }\n  state = {\n    isLoading : true,\n    movies : []\n  }\n  getMovies = async() => {\n    const {data : {data : {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\")\n                                                                                              //?sort_by=rating rating순으로 정렬\n    this.setState({movies , isLoading : false})\n  }\n  \n  componentDidMount(){\n    console.log(\"componenr redndsdds\")\n    //처음 랜더링 됐을때 실행 3 (처음랜더 완료 됐을 때만, 실행되고 그 이후 업데이트 시 실행 x , 새로고침해서 다시 랜더링 되면 초기에 한번만 실행)\n    this.getMovies();\n  }\n  componentDidUpdate(){\n    console.log(\"update\")\n    //컴포넌트 업데이트 완료되면 실행 3 (최초 랜더링떄 실행 x)\n    //이후 컴포넌트 업데이트시 랜더링2 -> 업데이트3 만 순서대로 실행됨\n  }\n  render(){\n    console.log(\"render\");\n    //컴포넌트 먼저 실행 2\n      const { isLoading, movies } = this.state;\n    return <section className=\"container\">\n      {\n        isLoading ? ( <div className=\"loadaer\"><span className=\"loader_text\">Loading...</span></div>\n        ) : ( \n          <div className=\"movies\">\n            {movies.map(movie => {\n              console.log(movie.genres);\n              return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>\n            })}\n          </div>\n        )\n      }\n      </section>\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//link는 route 쓸때만 사용할수 있음\u001c\n\nfunction Navigation(){\n    return (\n        <div>\n            <Link to=\"/\">Home</Link>\n            <Link to={{\n                pathname : \"/about\",\n                state : {\n                    fromNavigation : true,\n                    test : false\n                }\n            }}>About</Link>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./component/Navigation\";\n\nfunction App(props){\n  console.log(\"app : \", props)\n  return (\n  <HashRouter>\n    <Navigation />\n    {/* react route는 url을 가져온다*/}\n    <Route path=\"/\" exact={true} component={Home} />\n    {/* exact = url이 path와 일치할때만 ! 해당 라우터 반환. ex) /something 은 무시  */}\n    <Route path=\"/about\" component={About} />\n    {/* <Route path=\"/about\" component={About}  /> */}\n    <Route path=\"/movie-detail\" component={Detail} />\n  </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}